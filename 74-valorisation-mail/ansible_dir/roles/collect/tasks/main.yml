---
# tasks file for roles/collect

- name: fetch
  fetch:
    src: "{{ item.src }}"
    dest: "collect_files/{{ item.dir }}/{{ item.prefix }}_{{ ansible_hostname }}.txt"
    flat: yes
  with_items:
  - { src: "/etc/hosts", dir: "etc_hosts", prefix: "hosts" }
  - { src: "/etc/resolv.conf", dir: "etc_resolv_conf", prefix: "resolv" }
  - { src: "/etc/os-release", dir: "etc_os_release", prefix: "release" }
  - { src: "/etc/passwd", dir: "etc_passwd", prefix: "passwd" }

- name: state
  service_facts:
  register: __services_state

- name: number of services
  set_fact:
    service_up: "{{ __services_state.ansible_facts.services | length }}"

- name: size db
  shell:  mysql -N -e "SELECT table_schema 'Data Base Name',round(sum( data_length + index_length) / 1024 / 1024, 2) 'Data Base Size in MB' FROM information_schema.TABLES where table_schema not in ('mysql', 'performance_schema', 'information_schema') GROUP BY table_schema ;" | tr '\t' ';'
  become_user: root
  register: __data_db_size_mb

- name: number of rows per table
  shell:  mysql -N -e "select table_schema,table_name,TABLE_ROWS from information_schema.TABLES where table_schema not in ('mysql', 'performance_schema', 'information_schema') group by TABLE_SCHEMA,table_name;"| tr "\t" ";"
  become_user: root
  register: __data_tb_rows_nb

- name: debug
  debug:
    msg: "{{ __data_db_size_mb.stdout_lines }}"

- name: debug
  debug:
    msg: "{{ __data_tb_rows_nb.stdout_lines }}"

- name: server
  debug:
    msg: "{{ ansible_processor_cores }};{{ ansible_memory_mb.real.total }};{{ ansible_memory_mb.real.used }}"

- name: os
  shell: "cat /etc/*elea*"
  register: __os_release

- name: sudoers
  shell: cat /etc/sudoers | grep -v "#" | grep -v -e "^[[:space:]]*$"
  register: __file_sudoers

- name: debug
  debug:
    var: __file_sudoers




