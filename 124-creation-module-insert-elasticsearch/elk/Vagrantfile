Vagrant.configure(2) do |config|
  common = <<-SHELL
  sudo yum -y install vim tree net-tools telnet git python3
  sudo echo "autocmd filetype yaml setlocal ai ts=2 sw=2 et" > /home/vagrant/.vimrc
  sudo echo "alias python=/usr/bin/python3" >> /home/vagrant/.bashrc
  curl -fsSL https://get.docker.com -o get-docker.sh
  sudo sh get-docker.sh
  sudo usermod -aG docker vagrant
  sudo service docker start
  sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
  sudo systemctl restart sshd
  SHELL
	#config.vm.box = "centos/7"
	#config.vm.box_url = "centos/7"

	config.vm.define "es1" do |control|
		control.vm.hostname = "es1"
	  control.vm.box = "ubuntu/bionic64"
	  control.vm.box_url = "ubuntu/bionic64"
		control.vm.network "private_network", ip: "192.168.20.102"
		control.vm.provider "virtualbox" do |v|
			v.customize [ "modifyvm", :id, "--cpus", "4" ]
			v.customize [ "modifyvm", :id, "--memory", "6000" ]
			v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
			v.customize ["modifyvm", :id, "--name", "es1"]
		end
		control.vm.provision :shell, :inline => common
    control.vm.provision "shell", path: "install_elk.sh"
	end

#	config.vm.define "es2" do |control|
#		control.vm.hostname = "es2"
#	  control.vm.box = "ubuntu/bionic64"
#	  control.vm.box_url = "ubuntu/bionic64"
#		control.vm.network "private_network", ip: "192.168.20.106"
#		control.vm.provider "virtualbox" do |v|
#			v.customize [ "modifyvm", :id, "--cpus", "2" ]
#			v.customize [ "modifyvm", :id, "--memory", "4096" ]
#			v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
# 			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
#			v.customize ["modifyvm", :id, "--name", "es2"]
#		end
#		control.vm.provision :shell, :inline => common
#    control.vm.provision "shell", path: "install_es.sh"
#	end
#
#	config.vm.define "srv11" do |srv11|
#		srv11.vm.hostname = "srv11"
#	  srv11.vm.box = "ubuntu/bionic64"
#	  srv11.vm.box_url = "ubuntu/bionic64"
#		srv11.vm.network "private_network", ip: "192.168.20.104"
#		srv11.vm.provider "virtualbox" do |v|
#			v.customize [ "modifyvm", :id, "--cpus", "1" ]
#			v.customize [ "modifyvm", :id, "--memory", "512" ]
#			v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
# 			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
#			v.customize ["modifyvm", :id, "--name", "srv11"]
#		end
#		srv11.vm.provision :shell, :inline => common
#	end

end

